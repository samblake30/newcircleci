# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

jobs:
  pr-comment:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - run:
          name: "Install jq for JSON parsing"
          command: sudo apt-get update && sudo apt-get install -y jq
      - run:
          name: "Debug environment variables"
          command: |
            echo "CIRCLE_PULL_REQUEST: $CIRCLE_PULL_REQUEST"
            echo "CIRCLE_PULL_REQUESTS: $CIRCLE_PULL_REQUESTS"
            echo "CIRCLE_PR_NUMBER: $CIRCLE_PR_NUMBER"
            echo "CIRCLE_BRANCH: $CIRCLE_BRANCH"
            echo "CI_PULL_REQUEST: $CI_PULL_REQUEST"
      - run:
          name: "Post comment on PR"
          command: |
            # Multiple ways to detect PR
            PR_NUMBER=""
            REPO_OWNER="samblake30"
            REPO_NAME="newcircleci"
            
            # Try different methods to get PR number
            if [ -n "$CIRCLE_PR_NUMBER" ]; then
              PR_NUMBER="$CIRCLE_PR_NUMBER"
              echo "Found PR number from CIRCLE_PR_NUMBER: $PR_NUMBER"
            elif [ -n "$CIRCLE_PULL_REQUEST" ]; then
              PR_NUMBER=$(echo $CIRCLE_PULL_REQUEST | sed 's/.*\/pull\///' | sed 's/\/.*//')
              echo "Found PR number from CIRCLE_PULL_REQUEST: $PR_NUMBER"
            elif [ -n "$CIRCLE_PULL_REQUESTS" ]; then
              PR_NUMBER=$(echo $CIRCLE_PULL_REQUESTS | sed 's/.*\/pull\///' | sed 's/\/.*//' | head -1)
              echo "Found PR number from CIRCLE_PULL_REQUESTS: $PR_NUMBER"
            else
              # Try to get PR number from GitHub API using branch name
              echo "Trying to find PR using branch name: $CIRCLE_BRANCH"
              PR_RESPONSE=$(curl -s -H "Authorization: token $GH_TOKEN" \
                "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/pulls?head=$REPO_OWNER:$CIRCLE_BRANCH&state=open")
              
              PR_NUMBER=$(echo "$PR_RESPONSE" | jq -r '.[0].number // empty')
              
              if [ -n "$PR_NUMBER" ] && [ "$PR_NUMBER" != "null" ]; then
                echo "Found PR number from GitHub API: $PR_NUMBER"
              else
                echo "Could not find PR number. PR Response: $PR_RESPONSE"
              fi
            fi
            
            # Post comment if we found a PR number
            if [ -n "$PR_NUMBER" ] && [ "$PR_NUMBER" != "null" ] && [ "$PR_NUMBER" != "" ]; then
              echo "Posting comment to PR #$PR_NUMBER"
              
              # Create comment message
              COMMENT_BODY="ðŸš€ **CircleCI Build Notification**
              
              Hi! This is an automated comment from CircleCI.
              
              - **Branch:** \`$CIRCLE_BRANCH\`
              - **Build Number:** \`$CIRCLE_BUILD_NUM\`
              - **Commit:** \`$CIRCLE_SHA1\`
              - **Build URL:** $CIRCLE_BUILD_URL
              
              Your pull request is being processed! âœ¨"
              
              # Post comment to GitHub using API
              RESPONSE=$(curl -s -w "HTTP_CODE:%{http_code}" -X POST \
                -H "Authorization: token $GH_TOKEN" \
                -H "Accept: application/vnd.github.v3+json" \
                -H "Content-Type: application/json" \
                -d "{\"body\": \"$COMMENT_BODY\"}" \
                "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/issues/$PR_NUMBER/comments")
              
              HTTP_CODE=$(echo "$RESPONSE" | grep -o "HTTP_CODE:[0-9]*" | cut -d: -f2)
              RESPONSE_BODY=$(echo "$RESPONSE" | sed 's/HTTP_CODE:[0-9]*$//')
              
              echo "HTTP Response Code: $HTTP_CODE"
              echo "Response Body: $RESPONSE_BODY"
              
              if [ "$HTTP_CODE" -ge 200 ] && [ "$HTTP_CODE" -lt 300 ]; then
                echo "Successfully posted comment to PR #$PR_NUMBER"
              else
                echo "Failed to post comment to PR. HTTP Code: $HTTP_CODE"
                echo "Response: $RESPONSE_BODY"
              fi
            else
              echo "No PR number found. This might not be a pull request build."
              echo "Branch: $CIRCLE_BRANCH"
            fi

workflows:
  pr-workflow:
    jobs:
      - pr-comment:
          context: ctx-ci
          filters:
            branches:
              ignore: main
              
